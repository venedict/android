<!DOCTYPE html> 
<html> 
	<head> 
	<title>机房巡检移动终端演示系统</title> 
	<meta charset="utf-8" name="viewport" content="width=device-width, initial-scale=1"> 
	<link rel="stylesheet" href="jquery.mobile-1.1.1.min.css" />
	<script src="jquery-1.7.1.min.js"></script>
	<script src="jquery.mobile-1.1.1.min.js"></script>
	<script src="cordova-2.5.0.js"></script>
	
</head> 
<body> 

<div data-role="page">

	<div data-role="header">
		<h1>机房巡检</h1>
		<p id="deviceProperties">Loading device properties...</p>
		<p id="connectProperties">Loading connect properties...</p>
	</div>

	<div data-role="content" id="div_content">
		
	</div>
	
</div>
<script>

// Wait for Cordova to load
// 
document.addEventListener("deviceready", onDeviceReady, false);

// Cordova is loaded and it is now safe to make calls Cordova methods
//
function onDeviceReady() {
	page_check_device();
    page_check_connection();
}

function page_check_device()
{
    var element = document.getElementById('deviceProperties');

    element.innerHTML = 'Device Name: '     + device.name     + '<br />' + 
                        'Device Cordova: '  + device.cordova + '<br />' + 
                        'Device Platform: ' + device.platform + '<br />' + 
                        'Device UUID: '     + device.uuid     + '<br />' + 
                        'Device Model: '    + device.model     + '<br />' + 
                        'Device Version: '  + device.version  + '<br />';
}

function page_check_connection()
{
	
    var networkState = navigator.connection.type;

    var states = {};
    states[Connection.UNKNOWN]  = 'Unknown connection';
    states[Connection.ETHERNET] = 'Ethernet connection';
    states[Connection.WIFI]     = 'WiFi connection';
    states[Connection.CELL_2G]  = 'Cell 2G connection';
    states[Connection.CELL_3G]  = 'Cell 3G connection';
    states[Connection.CELL_4G]  = 'Cell 4G connection';
    states[Connection.CELL]     = 'Cell generic connection';
    states[Connection.NONE]     = 'No network connection';

    var element = document.getElementById('connectProperties');
	
    element.innerHTML = states[networkState];
}

page_initdata();
page_drawtable();

function page_initdata()
{
	var db = openDatabase('auditdemo','1.0','auditdemo',2*1024*1024);  
	db.transaction(function(tx)
	{  
	    // 巡检表模板
		tx.executeSql("create table if not exists t_app_auditcims (id, cname, ctype)");  
	    tx.executeSql("create table if not exists t_app_auditinspection (id, cimsid, pptype, ptype, pname, pobject)");  

	    tx.executeSql("delete from t_app_auditcims");
	    tx.executeSql("delete from t_app_auditinspection");
	    
	    tx.executeSql("insert into t_app_auditcims values('01','ERP系统巡检表','系统巡检')");  
	    tx.executeSql("insert into t_app_auditcims values('02','生产管理系统巡检表','系统巡检')");  
	    
	    tx.executeSql("insert into t_app_auditinspection values('0101','01','ERP系统','','数据库备份大小','运行情况')");  
	    tx.executeSql("insert into t_app_auditinspection values('0102','01','ERP系统','','数据库备份状态','运行情况')");  	    
	    tx.executeSql("insert into t_app_auditinspection values('0103','01','ERP系统','','日志备份大小','运行情况')");  		    
	    tx.executeSql("insert into t_app_auditinspection values('0104','01','ERP系统','','日志备份状态','运行情况')"); 
	  
	    // 巡检项
	    tx.executeSql("insert into t_app_auditinspection values('0201','02','生产管理系统','','数据库备份大小','运行情况')");  
	    tx.executeSql("insert into t_app_auditinspection values('0202','02','生产管理系统','','数据库备份状态','运行情况')");  	    
	    tx.executeSql("insert into t_app_auditinspection values('0203','02','生产管理系统','','日志备份大小','运行情况')");  		    
	    tx.executeSql("insert into t_app_auditinspection values('0204','02','生产管理系统','','日志备份状态','运行情况')"); 
	});
}

// 根据巡检模板绘制巡检表单
function page_drawtable()
{
	var db = openDatabase('auditdemo','1.0','auditdemo',2*1024*1024);  
	//查询数据  
	db.transaction(function(tx){  
	  tx.executeSql("select * from t_app_auditinspection where 1 = 1 and cimsid = '01' ",[],function(tx,result){  
		  page_drawtable_function(result);
		  
		  // page_draw_test1(result);
		  //page_draw_test();
	  });  
	}); 
}

//根据巡检模板绘制巡检表单
function page_drawtable_function(result)
{
	var htm = '';
	htm += '<form action="form.php" method="post">';
 	htm += '<ul data-role="listview">';
    for(var i=0;i<result.rows.length;i++)
    {  
        var item=result.rows.item(i);  

        htm += '<li data-role="list-divider">' + item.pptype + '</li>';  

        htm += '<li>';
        htm += '<div data-role="controlgroup" data-type="horizontal">';
        htm += item.ptype;
        htm += item.pname;
		
        htm += '<input type="checkbox" name="checkbox-zc-' + i + '" id="checkbox-zc-' + i + '" class="custom" />';
        htm += '<label for="checkbox-zc-' + i + '" >正常</label>';
 
        htm += '<input type="checkbox" name="checkbox-yc-' + i + '" id="checkbox-yc-' + i + '" class="custom" />';
        htm += '<label for="checkbox-yc-' + i + '" >异常</label>';

        htm += '</div>';
        htm += '</li>';


    }  
    
    htm += '</ul>';
    htm += '</form>';
    
    $('#div_content').html(htm).trigger('create');
}

function page_draw_test()
{
	var htm = '';
	htm += '<ul data-role="listview">';
    htm += '<li data-role="list-divider">Test</li>';
    htm += '<li data-theme="c"><a href="index.html">pujian</a></li>';
    htm += '<li data-role="list-divider">Test</li>';
    htm += '<li data-theme="c"><a href="index.html">pujian</a></li>';    
    htm += '</ul>';
    
    $('#div_content').html(htm).trigger('create');
}

</script>

</body>
</html>